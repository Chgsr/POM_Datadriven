<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="3" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="ParallelTestSuite" duration-ms="26505" started-at="2021-06-07T04:50:18Z" finished-at="2021-06-07T04:50:45Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="26505" started-at="2021-06-07T04:50:18Z" finished-at="2021-06-07T04:50:45Z">
      <class name="com.automation.Scripts.Purchase_Product">
        <test-method status="PASS" signature="OpenBrowser(java.lang.String)[pri:0, instance:com.automation.Scripts.Purchase_Product@5906ebcb]" name="OpenBrowser" is-config="true" duration-ms="3995" started-at="2021-06-07T10:20:14Z" finished-at="2021-06-07T10:20:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBrowser -->
        <test-method status="PASS" signature="BeforeTest()[pri:0, instance:com.automation.Scripts.Purchase_Product@5906ebcb]" name="BeforeTest" is-config="true" duration-ms="296" started-at="2021-06-07T10:20:18Z" finished-at="2021-06-07T10:20:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method status="PASS" signature="Beforemethod(java.lang.reflect.Method)[pri:0, instance:com.automation.Scripts.Purchase_Product@5906ebcb]" name="Beforemethod" is-config="true" duration-ms="10" started-at="2021-06-07T10:20:18Z" finished-at="2021-06-07T10:20:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.automation.Scripts.Purchase_Product.Opencart_PurchaseProduct() throws com.Automation.CustomisedExceptions.FrameWorkExceptions,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforemethod -->
        <test-method status="PASS" signature="Opencart_PurchaseProduct()[pri:0, instance:com.automation.Scripts.Purchase_Product@5906ebcb]" name="Opencart_PurchaseProduct" duration-ms="15182" started-at="2021-06-07T10:20:18Z" finished-at="2021-06-07T10:20:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Opencart_PurchaseProduct -->
        <test-method status="PASS" signature="Aftermethod(org.testng.ITestResult)[pri:0, instance:com.automation.Scripts.Purchase_Product@5906ebcb]" name="Aftermethod" is-config="true" duration-ms="1106" started-at="2021-06-07T10:20:34Z" finished-at="2021-06-07T10:20:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Opencart_PurchaseProduct status=SUCCESS method=Purchase_Product.Opencart_PurchaseProduct()[pri:0, instance:com.automation.Scripts.Purchase_Product@5906ebcb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aftermethod -->
        <test-method status="PASS" signature="Beforemethod(java.lang.reflect.Method)[pri:0, instance:com.automation.Scripts.Purchase_Product@5906ebcb]" name="Beforemethod" is-config="true" duration-ms="0" started-at="2021-06-07T10:20:35Z" finished-at="2021-06-07T10:20:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.automation.Scripts.Purchase_Product.ParllelTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforemethod -->
        <test-method status="PASS" signature="ParllelTest()[pri:1, instance:com.automation.Scripts.Purchase_Product@5906ebcb]" name="ParllelTest" duration-ms="5625" started-at="2021-06-07T10:20:35Z" finished-at="2021-06-07T10:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ParllelTest -->
        <test-method status="PASS" signature="Aftermethod(org.testng.ITestResult)[pri:0, instance:com.automation.Scripts.Purchase_Product@5906ebcb]" name="Aftermethod" is-config="true" duration-ms="1337" started-at="2021-06-07T10:20:40Z" finished-at="2021-06-07T10:20:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ParllelTest status=SUCCESS method=Purchase_Product.ParllelTest()[pri:1, instance:com.automation.Scripts.Purchase_Product@5906ebcb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aftermethod -->
        <test-method status="PASS" signature="GmailTest()[pri:2, instance:com.automation.Scripts.Purchase_Product@5906ebcb]" name="GmailTest" duration-ms="2527" started-at="2021-06-07T10:20:42Z" finished-at="2021-06-07T10:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GmailTest -->
        <test-method status="PASS" signature="Beforemethod(java.lang.reflect.Method)[pri:0, instance:com.automation.Scripts.Purchase_Product@5906ebcb]" name="Beforemethod" is-config="true" duration-ms="0" started-at="2021-06-07T10:20:42Z" finished-at="2021-06-07T10:20:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.automation.Scripts.Purchase_Product.GmailTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforemethod -->
        <test-method status="PASS" signature="Aftermethod(org.testng.ITestResult)[pri:0, instance:com.automation.Scripts.Purchase_Product@5906ebcb]" name="Aftermethod" is-config="true" duration-ms="314" started-at="2021-06-07T10:20:44Z" finished-at="2021-06-07T10:20:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GmailTest status=SUCCESS method=Purchase_Product.GmailTest()[pri:2, instance:com.automation.Scripts.Purchase_Product@5906ebcb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aftermethod -->
        <test-method status="PASS" signature="AfterTest()[pri:0, instance:com.automation.Scripts.Purchase_Product@5906ebcb]" name="AfterTest" is-config="true" duration-ms="80" started-at="2021-06-07T10:20:44Z" finished-at="2021-06-07T10:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="Closebrowser()[pri:0, instance:com.automation.Scripts.Purchase_Product@5906ebcb]" name="Closebrowser" is-config="true" duration-ms="1190" started-at="2021-06-07T10:20:45Z" finished-at="2021-06-07T10:20:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closebrowser -->
      </class> <!-- com.automation.Scripts.Purchase_Product -->
    </test> <!-- Test -->
  </suite> <!-- ParallelTestSuite -->
</testng-results>
